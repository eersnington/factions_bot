/**
Client {
    _events: [Object: null prototype] {
      connect: [ [Function: onConnect], [Function (anonymous)] ],
      keep_alive: [Function: onKeepAlive],
      end: [ [Function (anonymous)], [Function (anonymous)] ],
      set_compression: [Function: onCompressionRequest],
      custom_payload: [ [Function: onCustomPayload], [Function (anonymous)] ],
      disconnect: [ [Function (anonymous)], [Function (anonymous)] ],
      error: [Function (anonymous)],
      game_state_change: [
        [Function (anonymous)],
        [Function (anonymous)],
        [Function (anonymous)],
        [Function (anonymous)]
      ],
      title: [Function (anonymous)],
      block_action: [Function (anonymous)],
      block_break_animation: [Function (anonymous)],
      unload_chunk: [Function (anonymous)],
      update_light: [Function (anonymous)],
      map_chunk: [Function (anonymous)],
      map_chunk_bulk: [Function (anonymous)],
      multi_block_change: [Function (anonymous)],
      block_change: [Function (anonymous)],
      explosion: [ [Function (anonymous)], [Function (anonymous)] ],
      spawn_entity_painting: [Function (anonymous)],
      entity_destroy: [
        [Function (anonymous)],
        [Function (anonymous)],
        [Function (anonymous)]
      ],
      update_sign: [Function (anonymous)],
      tile_entity_data: [Function (anonymous)],
      login: [ [Function (anonymous)], [Function (anonymous)], [Function] ],
      respawn: [
        [Function (anonymous)],
        [Function (anonymous)],
        [Function (anonymous)]
      ],
      boss_bar: [Function (anonymous)],
      chat: [Function (anonymous)],
      set_slot: [ [Function (anonymous)], [Function (anonymous)] ],
      entity_equipment: [Function (anonymous)],
      bed: [Function (anonymous)],
      animation: [Function (anonymous)],
      named_entity_spawn: [Function (anonymous)],
      collect: [Function (anonymous)],
      spawn_entity: [ [Function (anonymous)], [Function (anonymous)] ],
      spawn_entity_experience_orb: [Function (anonymous)],
      spawn_entity_living: [Function (anonymous)],
      entity_velocity: [Function (anonymous)],
      rel_entity_move: [Function (anonymous)],
      entity_look: [Function (anonymous)],
      entity_move_look: [Function (anonymous)],
      entity_teleport: [Function (anonymous)],
      entity_head_rotation: [Function (anonymous)],
      entity_status: [ [Function (anonymous)], [Function (anonymous)] ],
      attach_entity: [ [Function (anonymous)], [Function (anonymous)] ],
      entity_metadata: [Function (anonymous)],
      entity_effect: [Function (anonymous)],
      remove_entity_effect: [Function (anonymous)],
      spawn_entity_weather: [Function (anonymous)],
      player_info: [Function (anonymous)], // PLAYER INFO //
      set_passengers: [Function (anonymous)],
      experience: [Function (anonymous)],
      world_particles: [Function (anonymous)],
      difficulty: [Function (anonymous)],
      update_health: [ [Function], [Function (anonymous)] ],
      transaction: [Function (anonymous)],
      held_item_slot: [Function (anonymous)],
      open_window: [Function (anonymous)],
      open_horse_window: [Function (anonymous)],
      close_window: [Function (anonymous)],
      window_items: [Function (anonymous)],
      kick_disconnect: [Function (anonymous)],
      position: [Function (anonymous)],
      scoreboard_objective: [Function (anonymous)],
      scoreboard_score: [Function (anonymous)],
      scoreboard_display_objective: [Function (anonymous)],
      named_sound_effect: [Function (anonymous)],
      sound_effect: [Function (anonymous)],
      spawn_position: [Function (anonymous)],
      playerlist_header: [Function (anonymous)],     // playerlist_header //
      update_time: [Function (anonymous)]
    },
    _eventsCount: 69,
    _maxListeners: undefined,
    customPackets: undefined,
    version: '1.8.8',
    isServer: false,
    splitter: Splitter {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [Decompressor],
        pipesCount: 1,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null
      },
      readable: true,
      _events: [Object: null prototype] {
        prefinish: [Function: prefinish],
        error: [Array],
        unpipe: [Function: onunpipe],
        close: [Function],
        finish: [Function],
        end: [Function],
        data: [Function: ondata]
      },
      _eventsCount: 7,
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 930,
        writing: true,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function (anonymous)],
        writecb: [Function: nop],
        writelen: 930,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [CorkedRequest]
      },
      writable: true,
      allowHalfOpen: true,
      _transformState: {
        afterTransform: [Function: bound afterTransform],
        needTransform: false,
        transforming: true,
        writecb: [Function (anonymous)],
        writechunk: <Buffer 13 00 01 00 00 0a 61 02 00 01 3c 07 64 65 66 61 75 6c 74 00 03 00 45 04 1c 00 3f 08 4d 43 7c 42 72 61 6e 64 10 50 61 70 65 72 20 28 56 65 6c 6f 63 69 ... 880 more bytes>,
        writeencoding: 'buffer'
      },
      buffer: <Buffer 13 00 01 00 00 0a 61 02 00 01 3c 07 64 65 66 61 75 6c 74 00 03 00 45 04 1c 00 3f 08 4d 43 7c 42 72 61 6e 64 10 50 61 70 65 72 20 28 56 65 6c 6f 63 69 ... 880 more bytes>,
      recognizeLegacyPing: false,
      [Symbol(kCapture)]: false
    },
    packetsToParse: {},
    compressor: Compressor {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [Framer],
        pipesCount: 1,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null
      },
      readable: true,
      _events: [Object: null prototype] {
        prefinish: [Function: prefinish],
        error: [Array],
        end: [Function],
        data: [Function: ondata],
        unpipe: [Function: onunpipe],
        drain: [Function: pipeOnDrainFunctionResult],
        close: [Function],
        finish: [Function]
      },
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function (anonymous)],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [CorkedRequest]
      },
      writable: true,
      allowHalfOpen: true,
      _transformState: {
        afterTransform: [Function: bound afterTransform],
        needTransform: true,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: null
      },
      compressionThreshold: 256,
      [Symbol(kCapture)]: false
    },
    framer: Framer {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [Cipheriv],
        pipesCount: 1,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null
      },
      readable: true,
      _events: [Object: null prototype] {
        prefinish: [Function: prefinish],
        error: [Array],
        end: [Function],
        data: [Function: ondata],
        unpipe: [Function: onunpipe],
        drain: [Function: pipeOnDrainFunctionResult],
        close: [Function],
        finish: [Function]
      },
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function (anonymous)],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [CorkedRequest]
      },
      writable: true,
      allowHalfOpen: true,
      _transformState: {
        afterTransform: [Function: bound afterTransform],
        needTransform: true,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: 'buffer'
      },
      [Symbol(kCapture)]: false
    },
    cipher: Cipheriv {
      _decoder: null,
      _options: undefined,
      _events: [Object: null prototype] {
        error: [Array],
        prefinish: [Function: prefinish],
        unpipe: [Function: onunpipe],
        drain: [Function: pipeOnDrainFunctionResult],
        close: [Function],
        finish: [Function],
        end: [Function],
        data: [Function: ondata]
      },
      _eventsCount: 8,
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [Array],
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        constructed: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'buffer',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        afterWriteTickInfo: null,
        buffered: [],
        bufferedIndex: 0,
        allBuffers: true,
        allNoop: true,
        pendingcb: 0,
        constructed: true,
        prefinished: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        errored: null,
        closed: false,
        closeEmitted: false,
        [Symbol(kOnFinished)]: []
      },
      allowHalfOpen: true,
      [Symbol(kHandle)]: CipherBase {},
      [Symbol(kCapture)]: false,
      [Symbol(kCallback)]: null
    },
    decipher: Decipheriv {
      _decoder: null,
      _options: undefined,
      _events: [Object: null prototype] {
        error: [Array],
        prefinish: [Function: prefinish],
        unpipe: [Function: onunpipe],
        close: [Function],
        finish: [Function],
        end: [Function],
        data: [Function: ondata]
      },
      _eventsCount: 7,
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [Array],
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        constructed: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'buffer',
        length: 930,
        writing: true,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: [Function: nop],
        writelen: 930,
        afterWriteTickInfo: null,
        buffered: [],
        bufferedIndex: 0,
        allBuffers: true,
        allNoop: true,
        pendingcb: 1,
        constructed: true,
        prefinished: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        errored: null,
        closed: false,
        closeEmitted: false,
        [Symbol(kOnFinished)]: []
      },
      allowHalfOpen: true,
      [Symbol(kHandle)]: CipherBase {},
      [Symbol(kCapture)]: false,
      [Symbol(kCallback)]: null
    },
    decompressor: Decompressor {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [FullPacketParser],
        pipesCount: 1,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null
      },
      readable: true,
      _events: [Object: null prototype] {
        prefinish: [Function: prefinish],
        error: [Array],
        unpipe: [Function: onunpipe],
        drain: [Function: pipeOnDrainFunctionResult],
        close: [Function],
        finish: [Function],
        end: [Function],
        data: [Function: ondata]
      },
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 19,
        writing: true,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function (anonymous)],
        writecb: [Function: nop],
        writelen: 19,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [CorkedRequest]
      },
      writable: true,
      allowHalfOpen: true,
      _transformState: {
        afterTransform: [Function: bound afterTransform],
        needTransform: false,
        transforming: true,
        writecb: [Function (anonymous)],
        writechunk: <Buffer 00 01 00 00 0a 61 02 00 01 3c 07 64 65 66 61 75 6c 74 00>,
        writeencoding: 'buffer'
      },
      compressionThreshold: 256,
      hideErrors: true,
      [Symbol(kCapture)]: false
    },
    ended: false,
    latency: 0,
    hideErrors: true,
    closeTimer: null,
    protocolState: 'play',
    serializer: Serializer {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [Compressor],
        pipesCount: 1,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null
      },
      readable: true,
      _events: [Object: null prototype] {
        prefinish: [Function: prefinish],
        error: [Function (anonymous)],
        end: [Function],
        data: [Function: ondata]
      },
      _eventsCount: 4,
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: true,
        highWaterMark: 16,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function (anonymous)],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [CorkedRequest]
      },
      writable: true,
      allowHalfOpen: true,
      _transformState: {
        afterTransform: [Function: bound afterTransform],
        needTransform: true,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: null
      },
      proto: CompiledProtodef {
        sizeOfCtx: [Object],
        writeCtx: [Object],
        readCtx: [Object]
      },
      mainType: 'packet',
      queue: <Buffer >,
      [Symbol(kCapture)]: false
    },
    deserializer: FullPacketParser {
      _readableState: ReadableState {
        objectMode: true,
        highWaterMark: 16,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null
      },
      readable: true,
      _events: [Object: null prototype] {
        prefinish: [Function: prefinish],
        error: [Array],
        data: [Function (anonymous)],
        unpipe: [Function: onunpipe],
        drain: [Function: pipeOnDrainFunctionResult],
        close: [Function],
        finish: [Function]
      },
      _eventsCount: 7,
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 18,
        writing: true,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function (anonymous)],
        writecb: [Function: nop],
        writelen: 18,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [CorkedRequest]
      },
      writable: true,
      allowHalfOpen: true,
      _transformState: {
        afterTransform: [Function: bound afterTransform],
        needTransform: false,
        transforming: true,
        writecb: [Function (anonymous)],
        writechunk: <Buffer 01 00 00 0a 61 02 00 01 3c 07 64 65 66 61 75 6c 74 00>,
        writeencoding: 'buffer'
      },
      proto: CompiledProtodef {
        sizeOfCtx: [Object],
        writeCtx: [Object],
        readCtx: [Object]
      },
      mainType: 'packet',
      noErrorLogging: true,
      [Symbol(kCapture)]: false
    },
    registerChannel: [Function: registerChannel],
    unregisterChannel: [Function: unregisterChannel],
    writeChannel: [Function: writeChannel],
    session: {
      accessToken: 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiOWZkMmVlNzNhZmY3YmVkNGZkNzFlMTliYmRmNzMyZCIsInlnZ3QiOiIyODc4NjY1ZjRiODU0NDRiYTU2ZTkxYTJiNDBhZjQ2MyIsInNwciI6ImE5ZGNlNTI5NmIxZjQzZjhiZDRhZTAyZDYwODI2OTNkIiwiaXNzIjoiWWdnZHJhc2lsLUF1dGgiLCJleHAiOjE2MjkyMTk2OTIsImlhdCI6MTYyOTA0Njg5Mn0.v7GfndFSevbvCUg7jISP3CZbCOQl8gL-pxr5Mt3NrKI',
      clientToken: '0aaa7bf1-f2da-4b6b-8c5d-2a4c5d229cae',
      selectedProfile: { id: 'a9dce5296b1f43f8bd4ae02d6082693d', name: 'OrphanH8r' },
      availableProfiles: [ [Object] ]
    },
    username: 'OrphanH8r',
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'pvp.thearchon.net',
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [Array],
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        constructed: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: true,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] {
        end: [Array],
        connect: [Function (anonymous)],
        error: [Array],
        close: [Array],
        timeout: [Function: endSocket],
        unpipe: [Function: onunpipe],
        finish: [Function],
        data: [Function: ondata]
      },
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        afterWriteTickInfo: null,
        buffered: [],
        bufferedIndex: 0,
        allBuffers: true,
        allNoop: true,
        pendingcb: 0,
        constructed: true,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: true,
        errored: null,
        closed: false,
        closeEmitted: false,
        [Symbol(kOnFinished)]: []
      },
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: null,
      _server: null,
      [Symbol(async_id_symbol)]: 262,
      [Symbol(kHandle)]: TCP {
        reading: true,
        onconnection: null,
        [Symbol(owner_symbol)]: [Circular *1]
      },
      [Symbol(kSetNoDelay)]: true,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    uuid: 'a9dce529-6b1f-43f8-bd4a-e02d6082693d',
    [Symbol(kCapture)]: false
  }

  */